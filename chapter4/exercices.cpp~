#include <exception>

#include "../std_lib_facilities.h"

int main() {
    cout << "Enter the exercise: (2-24)\n";
    int exercise;
    cin >> exercise;

    switch (exercise) {
        case 2: {
            vector<double> temps;
            double temp;

            while (cin >> temp) temps.push_back(temp);

            double sum = 0;
            for (size_t i = 0; i < temps.size(); ++i) {
                sum += temps[i];
            }
            cout << "Average temperature: " << sum / temps.size() << endl;

            sort(temps.begin(), temps.end());

            if (temps.size() % 2 != 0) {
                cout << "Median temperature: " << temps[temps.size() / 2] << endl;
            } else {
                cout << "Median temperature: "
                     << (temps[temps.size() / 2 - 1] + temps[temps.size() / 2]) / 2;
            }

            break;
        }
        case 3: {
            vector<double> distances;
            double distance;

            double total_distance = 0;

            while (cin >> distance) {
                distances.push_back(distance);
                total_distance += distance;
            }
            cout << "The total distance is: " << total_distance << endl;

            if (distances.empty()) {
                cout << "No distances were entered" << endl;
                return 0;
            }

            double smallest = distances[0];
            double largest = distances[0];

            for (size_t i = 0; i < distances.size(); ++i) {
                if (distances[i] > largest) {
                    largest = distances[i];
                }
                if (distances[i] < smallest) {
                    smallest = distances[i];
                }
            }
            cout << "The smallest distance is " << smallest << " and the largest is " << largest
                 << endl;

            cout << "The mean distance is " << total_distance / distances.size();

            break;
        }
        case 4: {
            cout << "- Guessing game -\n";

            cout << "Think of a number between 1 and 100\n";

            int floor = 1;
            int roof = 100;

            char guess;
            int counter = 0;

            while (floor < roof && counter < 7) {
                int mid = (floor + roof) / 2;

                cout << "Is your number higher than " << mid << "? (y/n)";
                cin >> guess;

                switch (guess) {
                    case 'y':
                        floor = mid + 1;
                        break;
                    case 'n':
                        roof = mid;
                        break;
                    default:
                        cout << "Please only answer 'y' or 'n'\n";
                        continue;
                }

                ++counter;
            }

            cout << "Your number is: " << floor << endl;

            break;
        }
        case 5: {
            cout << "- Simple Calculator -" << endl;

            cout << "Write your operation in the following format: \n"
                 << "value operation value \n";
            cout << "Supported operations are: " << endl;
            cout << "+ for add" << endl;
            cout << "- for subtract" << endl;
            cout << "* for multiply" << endl;
            cout << "/ for divide" << endl;
            cout << "% for modulus" << endl;

            double val1;
            double val2;
            char operation;

            while (cin >> val1 >> operation >> val2) {
                switch (operation) {
                    case '+':
                        cout << val1 + val2 << endl;
                        break;
                    case '-':
                        cout << val1 - val2 << endl;
                        break;
                    case '*':
                        cout << val1 * val2 << endl;
                        break;
                    case '/':
                        if (val2 != 0) {
                            cout << val1 / val2 << endl;
                        } else {
                            cout << "Cannot divide by zero" << endl;
                        }
                        break;
                    case '%':
                        cout << (int)val1 % (int)val2 << endl;
                        break;
                }
            }

            break;
        }
        case 6: {
            cout << "- Spelling conversion -" << endl;

            vector<string> spelled_numbers = {"zero", "one", "two",   "three", "four",
                                              "five", "six", "seven", "eight", "nine"};

            cout << "Enter the number you wish to evaluate: " << endl;
            string selection;

            while (cin >> selection) {
                // Number by name eg. zero
                bool found = false;
                for (size_t i = 0; i < spelled_numbers.size(); ++i) {
                    if (spelled_numbers[i] == selection) {
                        cout << i << endl;
                        found = true;
                        break;
                    }
                }

                // Ascii values
                if (!found && isdigit((int)selection[0])) {
                    cout << spelled_numbers[selection[0] - '0'] << endl;
                }
            }

            break;
        }
        case 7: {
            // nasty
            cout << "- Simple Calculator -" << endl;

            cout << "Write your operation in the following format: \n"
                 << "value operation value \n";
            cout << "Supported operations are: " << endl;
            cout << "+ for add" << endl;
            cout << "- for subtract" << endl;
            cout << "* for multiply" << endl;
            cout << "/ for divide" << endl;
            cout << "% for modulus" << endl;

            string val1;
            string val2;
            double first_number;
            double second_number;
            char operation;

            vector<string> spelled_numbers = {"zero", "one", "two",   "three", "four",
                                              "five", "six", "seven", "eight", "nine"};

            while (cin >> val1 >> operation >> val2) {
                bool val1_valid = false;
                bool val2_valid = false;
                // Number by name eg. zero
                for (size_t i = 0; i < spelled_numbers.size(); ++i) {
                    if (spelled_numbers[i] == val1) {
                        val1_valid = true;
                        first_number = i;
                    }
                    if (spelled_numbers[i] == val2) {
                        val2_valid = true;
                        second_number = i;
                    }
                }

                // Ascii values
                if (!val1_valid && isdigit((int)val1[0])) {
                    first_number = val1[0] - '0';
                    val1_valid = true;
                }

                if (!val2_valid && isdigit((int)val2[0])) {
                    second_number = val2[0] - '0';
                    val2_valid = true;
                }

                if (val1_valid && val2_valid) {
                    switch (operation) {
                        case '+':
                            cout << first_number + second_number << endl;
                            break;
                        case '-':
                            cout << first_number - second_number << endl;
                            break;
                        case '*':
                            cout << first_number * second_number << endl;
                            break;
                        case '/':
                            if (second_number != 0) {
                                cout << first_number / second_number << endl;
                            } else {
                                cout << "Cannot divide by zero" << endl;
                            }
                            break;
                        case '%':
                            cout << (int)first_number % (int)second_number << endl;
                            break;
                    }
                }
            }

            break;
        }
        case 8: {
            cout << "- Doubling grains -\n";
            cout << "Enter the desired amount of grains: \n";
            double goal;
            cin >> goal;

            double current_square = 1;
            double grains = 1;
            double total = 1;

            while (total < goal) {
                ++current_square;
                grains *= 2;
                total += grains;
                cout << grains << endl;
            }

            cout << "For " << goal << " grains, you need " << current_square << " squares" << endl;
            break;
        }
        case 10: {
            cout << "- Rock, Paper, Scissors -\n";

            cout << "Enter your selection: (r, p, s)";
            char selection;

            vector<char> machine_options = {'r', 'p', 's'};

            while (cin >> selection) {
                char chosen = machine_options[rand()% 3];
                // cout << "DEBUG(chosen): " << chosen << endl;

                switch (selection) {
                    case 'r':
                        switch (chosen) {
                            case 'r':
                                cout << "It's a tie" << endl;
                                break;
                            case 'p':
                                cout << "You lose" << endl;
                                break;
                            case 's':
                                cout << "You win" << endl;
                                break;
                        }
                        break;
                    case 'p':
                        switch (chosen) {
                            case 'r':
                                cout << "You win" << endl;
                                break;
                            case 'p':
                                cout << "It's a tie" << endl;
                                break;
                            case 's':
                                cout << "You lose" << endl;
                                break;
                        }
                        break;
                    case 's':
                        switch (chosen) {
                            case 'r':
                                cout << "You lose" << endl;
                                break;
                            case 'p':
                                cout << "You win" << endl;
                                break;
                            case 's':
                                cout << "It's a tie" << endl;
                                break;
                        }
                        break;
                }
            }

            break;
        }
    case 11: case 12:
        {

            
            cout << "- Primos! -\n";
            cout << "Calculate the amount of prime numbers until: " << endl;
            int max;
            cin >> max;

            vector<int> primes = {2};


            for(int i = 0; i < max; ++i)
                {
                    bool is_prime = true;
                    for(size_t j = 0; j < primes.size(); ++j)
                        {
                            if(primes[j] <= sqrt(i))
                                {
                                    if(primes[j] % i == 0)
                                        {
                                            is_prime = false;
                                        }
                                }
                        }
                    if(is_prime)
                        {
                            primes.push_back(i);
                        }
                    
                }

            for(size_t i = 0; i < primes.size(); ++i)
                {
                    cout << primes[i] << endl;
                }
            
            break;
        }
    }

    return 0;
}
